ExeData |> transmute(Month, metric, exe_value = value),
by = c("Month", "metric")
) |>
#calculate difference
mutate(diff = abs(exe_value - value)) |>
#scale for each metric
group_by(metric) |>
mutate(scaled = (diff - min(diff, na.rm = T)) / (max(diff, na.rm = T) - min(diff, na.rm = T))) |>
ungroup()
SimilarityScores <- ClimateData |>
filter(
metric %in% c("Daily mean", "Average precipitation") &
str_detect(units, "C|mm") &
city != "Exeter"
) |>
#join on exeter datya
left_join(
ExeData |> transmute(Month, metric, exe_value = value),
by = c("Month", "metric")
) |>
#calculate difference
mutate(diff = abs(exe_value - value)) |>
#scale for each metric
group_by(metric) |>
mutate(scaled = 100 * (diff - min(diff, na.rm = T)) / (max(diff, na.rm = T) - min(diff, na.rm = T))) |>
ungroup()
SimilarityScores <- ClimateData |>
filter(
metric %in% c("Daily mean", "Average precipitation") &
str_detect(units, "C|mm") &
city != "Exeter"
) |>
#join on exeter datya
left_join(
ExeData |> transmute(Month, metric, exe_value = value),
by = c("Month", "metric")
) |>
#calculate difference
mutate(diff = abs(exe_value - value)) |>
#scale for each metric
group_by(metric) |>
mutate(scaled = 100 * (diff - min(diff, na.rm = T)) / (max(diff, na.rm = T) - min(diff, na.rm = T))) |>
ungroup() |>
group_by(city) |>
summarise(score = mean(scaled)) |>
ungroup()
#packages------------------------------
library(DBI)
library(glue)
library(rvest)
library(RSQLite)
library(tidyverse)
#connect to sqlite db
wikiDb <- dbConnect(SQLite(), "wiki-urls.db")
#read pertientn tables
tbl_names <- c("countries", "cities", "urls")
wikiDbDfs <- lapply(
tbl_names,
dbReadTable,
conn = wikiDb
)
names(wikiDbDfs) <- tbl_names
#create usable dataset
wikiDataset <- left_join(
wikiDbDfs[["cities"]],
wikiDbDfs[["countries"]],
by = "country_code"
) |>
left_join(
wikiDbDfs[["urls"]],
by = c("id" = "city_code")
)
clipr::write_clip(wikiDataset)
clipr::write_clip(wikiDataset)
View(wikiDataset)
#import functions----------------------------
source("function.R")
#packages------------------------------
library(DBI)
library(glue)
#import functions----------------------------
source("functions.R")
#packages------------------------------
library(DBI)
library(glue)
library(rvest)
library(RSQLite)
library(tidyverse)
#connect to sqlite db
wikiDb <- dbConnect(SQLite(), "wiki-urls.db")
#read pertientn tables
tbl_names <- c("countries", "cities", "urls")
wikiDbDfs <- lapply(
tbl_names,
dbReadTable,
conn = wikiDb
)
names(wikiDbDfs) <- tbl_names
#create usable dataset
wikiDataset <- left_join(
wikiDbDfs[["cities"]],
wikiDbDfs[["countries"]],
by = "country_code"
) |>
left_join(
wikiDbDfs[["urls"]],
by = c("id" = "city_code")
)
#grab wikipedia climate data
wikiClimate <- purrr::map(
.x = wikiDataset$city_name,
.f = safely(function(x) scrape_wiki(x))
) |>
map_dfr("result")
#write data--------------
write.csv(wikiClimate, "scraped_data.csv", row.names = F)
rm(list=ls())
#packages----------------------
library(tidyverse)
ClimateData <- read.csv("scraped_data.csv", stringsAsFactors = F)
View(ClimateData)
ExeData <- ClimateData |>
filter(
city == "Exeter" &
metric %in% c("Daily mean", "Average precipitation") &
str_detect(units, "C|mm")
)
#seasonal adjustments
seasonal_adj <- read.csv("season_adjustments.csv", stringsAsFactors = F)
SimilarityScores <- ClimateData |>
filter(
metric %in% c("Daily mean", "Average precipitation") &
str_detect(units, "C|mm") &
city != "Exeter"
) |>
#make seasonal adjustments
left_join(
seasonal_adj,
by = c("hemisphere", "month")
)
SimilarityScores <- ClimateData |>
filter(
metric %in% c("Daily mean", "Average precipitation") &
str_detect(units, "C|mm") &
city != "Exeter"
) |>
#make seasonal adjustments
left_join(
seasonal_adj,
by = c("hemisphere", "Month" = "month")
)
View(SimilarityScores)
SimilarityScores <- ClimateData |>
filter(
metric %in% c("Daily mean", "Average precipitation") &
str_detect(units, "C|mm") &
city != "Exeter"
) |>
#make seasonal adjustments
left_join(
seasonal_adj,
by = c("hemisphere", "Month" = "month")
) |>
#join on exeter datya
left_join(
ExeData |> transmute(Month, metric, exe_value = value),
by = c("adjusted_month" = "Month", "metric")
) |>
#calculate difference
mutate(diff = abs(exe_value - value)) |>
#scale for each metric
group_by(metric) |>
mutate(scaled = 100 * (diff - min(diff, na.rm = T)) / (max(diff, na.rm = T) - min(diff, na.rm = T))) |>
ungroup() |>
group_by(city) |>
summarise(score = mean(scaled)) |>
ungroup()
SimilarityScores <- ClimateData |>
filter(
metric %in% c("Daily mean", "Average precipitation") &
str_detect(units, "C|mm") &
city != "Exeter"
) |>
#make seasonal adjustments
left_join(
seasonal_adj,
by = c("hemisphere", "Month" = "month")
) |>
#join on exeter datya
left_join(
ExeData |> transmute(Month, metric, exe_value = value),
by = c("adjusted_month" = "Month", "metric")
) |>
#calculate difference
mutate(diff = abs(exe_value - value))
unique(SimilarityScores$metric)
View(ExeData)
View(ClimateData)
gc()
gc()
#import functions----------------------------
source("functions.R")
#packages------------------------------
library(DBI)
library(glue)
library(rvest)
library(RSQLite)
library(tidyverse)
#connect to sqlite db
wikiDb <- dbConnect(SQLite(), "wiki-urls.db")
#read pertientn tables
tbl_names <- c("countries", "cities", "urls")
wikiDbDfs <- lapply(
tbl_names,
dbReadTable,
conn = wikiDb
)
names(wikiDbDfs) <- tbl_names
#create usable dataset
wikiDataset <- left_join(
wikiDbDfs[["cities"]],
wikiDbDfs[["countries"]],
by = "country_code"
) |>
left_join(
wikiDbDfs[["urls"]],
by = c("id" = "city_code")
)
#grab wikipedia climate data
wikiClimate <- purrr::map(
.x = wikiDataset$city_name,
.f = safely(function(x) scrape_wiki(x))
) |>
map_dfr("result")
View(wikiClimate)
location <- "Atlanta"
#set url
url <- wikiDataset$url[match(location, wikiDataset$city_name)]
#read page
html <- read_html(url)
#get tables
all_tbls <- html_nodes(html, "table")
climate_tbl <- all_tbls[grep("climate data", all_tbls, ignore.case = T)]
climate_df <- html_table(climate_tbl[[1]]) #always take the first one
#extract the timeframe
timeband <- colnames(climate_df)[1] |>
str_extract("[1-2][0-9][0-9][0-9]–[1-2][0-9][0-9][0-9]")
#new names for columns, ensure consistency
new_names <- paste0("col_", c(1:length(colnames(climate_df))))
#wrangle the climate df
wrangled <- climate_df |>
stats::setNames(new_names) |>
#relevant rows
filter(
str_detect(col_1, "Month|maximum|minimum|mean|precipitation|rain|humidity|sunshine|high|low") &
!str_detect(col_1, "Source")
) |>
#tall
pivot_longer(
cols = -col_1,
names_to = "temp",
values_to = "values"
) |>
#temproarily back to wide
pivot_wider(names_from = col_1, values_from = "values") |>
#remove extraneous column
select(-temp) |>
#taller format
pivot_longer(cols = -Month, names_to = "metric", values_to = "value") |>
#remove annual total/average
filter(Month != "Year") |>
#get units
mutate(
units_1 = case_when(
str_detect(metric, "°") ~ word(metric, 3),
str_detect(metric, "rainfall|precip") & str_detect(metric, "mm|inch") & !str_detect(metric, "days") ~ word(metric, 3),
str_detect(metric, "days") ~ "days",
str_detect(metric, regex("humidity|percent", ignore_case = T)) ~ "%",
str_detect(metric, "hour") ~ "hours"
),
units_2 = case_when(
str_detect(metric, "°") ~ word(metric, 4),
str_detect(metric, "rainfall|precip") & str_detect(metric, "mm|inch") ~ word(metric, 4)
),
value_2 = str_extract(value, "(?<=\\()(.*)(?=\\))"),
value_1 = str_remove(value, "(?<=\\()(.*)(?=\\))") |> str_remove_all("\\(|\\)")
) |>
mutate(across(contains("unit"), function(x) str_remove_all(x, "\\(|\\)"))) |>
select(-value) |>
#rename metric column for clarity
mutate(
metric = str_remove_all(
metric, "\\(|\\)|°F|°C|mm|inches|hours||days|Percent|percent"
)
) |>
#sort out values and units
pivot_longer(
cols = c(units_1:value_1),
names_to = "temp",
values_to = "temp_values"
) |>
separate(
temp,
into = c("temp1", "temp2"),
sep = "_"
) |>
pivot_wider(names_from = temp1, values_from = temp_values) |>
select(-temp2) |>
#tidy up data
mutate(
city = str_to_title(location),
time_period = timeband,
value = ifelse(is.na(as.numeric(value)), -as.numeric(substr(value, 2, length(value))), as.numeric(value))
) |>
#join on pertientn country data
left_join(
wikiDataset |>
transmute(city_name, country = name, hemisphere),
by = c("city" = "city_name")
) |>
#standardise metrics/variables
mutate(
metric = case_when(
metric %in% c("Average precipitation", "Average rainfall") ~ "Average precipitation/rainfall",
str_detect(metric, "rainy days|precipitation days") ~ "Average precipitation/rainfall days",
str_detect(metric, "humidity") ~ "Humidity",
TRUE ~ metric
),
metric = str_trim(metric, side = "both")
) |>
filter(!is.na(units))
View(wrangled)
View(wikiClimate)
#import functions----------------------------
source("functions.R")
#grab wikipedia climate data
wikiClimate <- purrr::map(
.x = wikiDataset$city_name,
.f = safely(function(x) scrape_wiki(x))
) |>
map_dfr("result")
wikiClimate <- purrr::map(
.x = wikiDataset$city_name,
.f = safely(function(x) scrape_wiki(x))
)
View(WikiClimate[[1]])
View(wikiClimate[[1]])
View(wikiClimate[[1]][["result"]])
#grab wikipedia climate data
wikiClimate <- purrr::map(
.x = wikiDataset$city_name,
.f = scrape_wiki
) |>
map_dfr("result")
warnings()
#import functions----------------------------
source("functions.R")
#grab wikipedia climate data
wikiClimate <- purrr::map(
.x = wikiDataset$city_name,
.f = scrape_wiki
) |>
map_dfr("result")
#grab wikipedia climate data
wikiClimate <- purrr::map(
.x = wikiDataset$city_name,
.f = function(x) safely(scrape_wiki(x))
) |>
map_dfr("result")
#grab wikipedia climate data
wikiClimate <- purrr::map(
.x = wikiDataset$city_name,
.f = safely(function(x) scrape_wiki(x))
) |>
map_dfr("result")
View(wikiClimate)
#import functions----------------------------
source("functions.R")
#grab wikipedia climate data
wikiClimate <- purrr::map(
.x = wikiDataset$city_name,
.f = safely(function(x) scrape_wiki(x))
) |>
map_dfr("result")
#import functions----------------------------
source("functions.R")
#import functions----------------------------
source("functions.R")
#grab wikipedia climate data
wikiClimate <- purrr::map(
.x = wikiDataset$city_name,
.f = safely(function(x) scrape_wiki(x))
) |>
map_dfr("result")
#import functions----------------------------
source("functions.R")
#grab wikipedia climate data
wikiClimate <- lapply(
wikiDataset$city_name,
safely(function(x) scrape_wiki(x))
) |>
map_dfr("result")
#set url
url <- wikiDataset$url[match(location, wikiDataset$city_name)]
#read page
html <- read_html(url)
#get tables
all_tbls <- html_nodes(html, "table")
climate_tbl <- all_tbls[grep("climate data", all_tbls, ignore.case = T)]
climate_df <- html_table(climate_tbl[[1]]) #always take the first one
#extract the timeframe
timeband <- colnames(climate_df)[1] |>
str_extract("[1-2][0-9][0-9][0-9]–[1-2][0-9][0-9][0-9]")
#new names for columns, ensure consistency
new_names <- paste0("col_", c(1:length(colnames(climate_df))))
#wrangle the climate df
wrangled <- climate_df |>
stats::setNames(new_names) |>
#relevant rows
filter(
str_detect(col_1, "Month|maximum|minimum|mean|precipitation|rain|humidity|sunshine|high|low") &
!str_detect(col_1, "Source")
) |>
#tall
pivot_longer(
cols = -col_1,
names_to = "temp",
values_to = "values"
) |>
#temproarily back to wide
pivot_wider(names_from = col_1, values_from = "values") |>
#remove extraneous column
select(-temp) |>
#taller format
pivot_longer(cols = -Month, names_to = "metric", values_to = "value") |>
#remove annual total/average
filter(Month != "Year") |>
#get units
mutate(
units_1 = case_when(
str_detect(metric, "\\°") ~ word(metric, 3),
str_detect(metric, "rain|precip") & str_detect(metric, "mm|inch") & !str_detect(metric, "days") ~ word(metric, 3),
str_detect(metric, "days") ~ "days",
str_detect(metric, regex("humidity|percent", ignore_case = T)) ~ "%",
str_detect(metric, "hour") ~ "hours"
),
units_2 = case_when(
str_detect(metric, "\\°") ~ word(metric, 4),
str_detect(metric, "rainfall|precip") & str_detect(metric, "mm|inch") ~ word(metric, 4)
),
value_2 = str_extract(value, "(?<=\\()(.*)(?=\\))"),
value_1 = str_remove(value, "(?<=\\()(.*)(?=\\))") |> str_remove_all("\\(|\\)")
) |>
mutate(across(contains("unit"), function(x) str_remove_all(x, "\\(|\\)"))) |>
select(-value) |>
#rename metric column for clarity
mutate(
metric = str_remove_all(
metric, "\\(|\\)|\\°F|\\°C|mm|inches|hours||days|Percent|percent"
)
) |>
#sort out values and units
pivot_longer(
cols = c(units_1:value_1),
names_to = "temp",
values_to = "temp_values"
) |>
separate(
temp,
into = c("temp1", "temp2"),
sep = "_"
) |>
pivot_wider(names_from = temp1, values_from = temp_values) |>
select(-temp2) |>
#tidy up data
mutate(
city = str_to_title(location),
time_period = timeband,
value = ifelse(is.na(as.numeric(value)), -as.numeric(substr(value, 2, length(value))), as.numeric(value))
) |>
#join on pertientn country data
left_join(
wikiDataset |>
transmute(city_name, country = name, hemisphere),
by = c("city" = "city_name")
) |>
#standardise metrics/variables
mutate(
metric = case_when(
metric %in% c("Average precipitation", "Average rainfall") ~ "Average precipitation/rainfall",
str_detect(metric, "rainy days|precipitation days") ~ "Average precipitation/rainfall days",
str_detect(metric, "humidity") ~ "Humidity",
TRUE ~ metric
),
metric = str_trim(metric, side = "both")
) |>
filter(!is.na(units))
View(wrangled)
install.packages(c("backports", "BayesFactor", "bayestestR", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "checkmate", "chron", "classInt", "cli", "clipr", "colorspace", "commonmark", "conflicted", "crayon", "credentials", "crosstalk", "data.table", "datawizard", "DBI", "dbplyr", "desc", "DescTools", "deSolve", "devtools", "dials", "diffobj", "downlit", "dplyr", "DT", "dtplyr", "e1071", "effectsize", "emmeans", "evaluate", "Exact", "fansi", "foreach", "furrr", "future", "gargle", "generics", "gert", "ggfun", "ggimage", "ggplot2", "gld", "globals", "glue", "googledrive", "googlesheets4", "gower", "graphlayouts", "gt", "gtools", "hardhat", "haven", "hms", "htmlwidgets", "httpuv", "httr", "igraph", "imager", "infer", "insight", "ipred", "iterators", "jsonlite", "keyring", "knitr", "later", "lava", "lhs", "lme4", "lmom", "lubridate", "magrittr", "maptools", "mathjaxr", "memoise", "metafor", "mime", "modeldata", "mvtnorm", "nloptr", "odbc", "openssl", "openxlsx", "parallelly", "parameters", "parsnip", "pdftools", "performance", "pillar", "pins", "pkgbuild", "pkgdown", "pkgload", "plotly", "plyr", "prismatic", "pROC", "processx", "proxy", "ps", "qdapRegex", "qpdf", "R.methodsS3", "R.oo", "R.utils", "ragg", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "reprex", "rgdal", "rgeos", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rsample", "RSQLite", "rvest", "s2", "sass", "scales", "sessioninfo", "sf", "shiny", "showtext", "sjlabelled", "sjmisc", "slider", "sodium", "sp", "stringi", "sysfonts", "systemfonts", "targets", "testthat", "tibble", "tidygraph", "tidymodels", "tidyr", "tidyselect", "tiff", "tinytex", "tune", "tzdb", "units", "usethis", "uuid", "V8", "vctrs", "viridis", "vroom", "waldo", "withr", "wk", "workflows", "workflowsets", "worldfootballR", "xfun", "xml2", "yaml", "yardstick", "zoo"))
install.packages(c("backports", "BayesFactor", "bayestestR", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "checkmate", "chron", "classInt", "cli", "clipr", "colorspace", "commonmark", "conflicted", "crayon", "credentials", "crosstalk", "data.table", "datawizard", "DBI", "dbplyr", "desc", "DescTools", "deSolve", "devtools", "dials", "diffobj", "downlit", "dplyr", "DT", "dtplyr", "e1071", "effectsize", "emmeans", "evaluate", "Exact", "fansi", "foreach", "furrr", "future", "gargle", "generics", "gert", "ggfun", "ggimage", "ggplot2", "gld", "globals", "glue", "googledrive", "googlesheets4", "gower", "graphlayouts", "gt", "gtools", "hardhat", "haven", "hms", "htmlwidgets", "httpuv", "httr", "igraph", "imager", "infer", "insight", "ipred", "iterators", "jsonlite", "keyring", "knitr", "later", "lava", "lhs", "lme4", "lmom", "lubridate", "magrittr", "maptools", "mathjaxr", "memoise", "metafor", "mime", "modeldata", "mvtnorm", "nloptr", "odbc", "openssl", "openxlsx", "parallelly", "parameters", "parsnip", "pdftools", "performance", "pillar", "pins", "pkgbuild", "pkgdown", "pkgload", "plotly", "plyr", "prismatic", "pROC", "processx", "proxy", "ps", "qdapRegex", "qpdf", "R.methodsS3", "R.oo", "R.utils", "ragg", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "reprex", "rgdal", "rgeos", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rsample", "RSQLite", "rvest", "s2", "sass", "scales", "sessioninfo", "sf", "shiny", "showtext", "sjlabelled", "sjmisc", "slider", "sodium", "sp", "stringi", "sysfonts", "systemfonts", "targets", "testthat", "tibble", "tidygraph", "tidymodels", "tidyr", "tidyselect", "tiff", "tinytex", "tune", "tzdb", "units", "usethis", "uuid", "V8", "vctrs", "viridis", "vroom", "waldo", "withr", "wk", "workflows", "workflowsets", "worldfootballR", "xfun", "xml2", "yaml", "yardstick", "zoo"))
install.packages(c("backports", "BayesFactor", "bayestestR", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "checkmate", "chron", "classInt", "cli", "clipr", "colorspace", "commonmark", "conflicted", "crayon", "credentials", "crosstalk", "data.table", "datawizard", "DBI", "dbplyr", "desc", "DescTools", "deSolve", "devtools", "dials", "diffobj", "downlit", "dplyr", "DT", "dtplyr", "e1071", "effectsize", "emmeans", "evaluate", "Exact", "fansi", "foreach", "furrr", "future", "gargle", "generics", "gert", "ggfun", "ggimage", "ggplot2", "gld", "globals", "glue", "googledrive", "googlesheets4", "gower", "graphlayouts", "gt", "gtools", "hardhat", "haven", "hms", "htmlwidgets", "httpuv", "httr", "igraph", "imager", "infer", "insight", "ipred", "iterators", "jsonlite", "keyring", "knitr", "later", "lava", "lhs", "lme4", "lmom", "lubridate", "magrittr", "maptools", "mathjaxr", "memoise", "metafor", "mime", "modeldata", "mvtnorm", "nloptr", "odbc", "openssl", "openxlsx", "parallelly", "parameters", "parsnip", "pdftools", "performance", "pillar", "pins", "pkgbuild", "pkgdown", "pkgload", "plotly", "plyr", "prismatic", "pROC", "processx", "proxy", "ps", "qdapRegex", "qpdf", "R.methodsS3", "R.oo", "R.utils", "ragg", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "reprex", "rgdal", "rgeos", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rsample", "RSQLite", "rvest", "s2", "sass", "scales", "sessioninfo", "sf", "shiny", "showtext", "sjlabelled", "sjmisc", "slider", "sodium", "sp", "stringi", "sysfonts", "systemfonts", "targets", "testthat", "tibble", "tidygraph", "tidymodels", "tidyr", "tidyselect", "tiff", "tinytex", "tune", "tzdb", "units", "usethis", "uuid", "V8", "vctrs", "viridis", "vroom", "waldo", "withr", "wk", "workflows", "workflowsets", "worldfootballR", "xfun", "xml2", "yaml", "yardstick", "zoo"))
install.packages(c("backports", "BayesFactor", "bayestestR", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "checkmate", "chron", "classInt", "cli", "clipr", "colorspace", "commonmark", "conflicted", "crayon", "credentials", "crosstalk", "data.table", "datawizard", "DBI", "dbplyr", "desc", "DescTools", "deSolve", "devtools", "dials", "diffobj", "downlit", "dplyr", "DT", "dtplyr", "e1071", "effectsize", "emmeans", "evaluate", "Exact", "fansi", "foreach", "furrr", "future", "gargle", "generics", "gert", "ggfun", "ggimage", "ggplot2", "gld", "globals", "glue", "googledrive", "googlesheets4", "gower", "graphlayouts", "gt", "gtools", "hardhat", "haven", "hms", "htmlwidgets", "httpuv", "httr", "igraph", "imager", "infer", "insight", "ipred", "iterators", "jsonlite", "keyring", "knitr", "later", "lava", "lhs", "lme4", "lmom", "lubridate", "magrittr", "maptools", "mathjaxr", "memoise", "metafor", "mime", "modeldata", "mvtnorm", "nloptr", "odbc", "openssl", "openxlsx", "parallelly", "parameters", "parsnip", "pdftools", "performance", "pillar", "pins", "pkgbuild", "pkgdown", "pkgload", "plotly", "plyr", "prismatic", "pROC", "processx", "proxy", "ps", "qdapRegex", "qpdf", "R.methodsS3", "R.oo", "R.utils", "ragg", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "reprex", "rgdal", "rgeos", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rsample", "RSQLite", "rvest", "s2", "sass", "scales", "sessioninfo", "sf", "shiny", "showtext", "sjlabelled", "sjmisc", "slider", "sodium", "sp", "stringi", "sysfonts", "systemfonts", "targets", "testthat", "tibble", "tidygraph", "tidymodels", "tidyr", "tidyselect", "tiff", "tinytex", "tune", "tzdb", "units", "usethis", "uuid", "V8", "vctrs", "viridis", "vroom", "waldo", "withr", "wk", "workflows", "workflowsets", "worldfootballR", "xfun", "xml2", "yaml", "yardstick", "zoo"))
install.packages(c("backports", "BayesFactor", "bayestestR", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "checkmate", "chron", "classInt", "cli", "clipr", "colorspace", "commonmark", "conflicted", "crayon", "credentials", "crosstalk", "data.table", "datawizard", "DBI", "dbplyr", "desc", "DescTools", "deSolve", "devtools", "dials", "diffobj", "downlit", "dplyr", "DT", "dtplyr", "e1071", "effectsize", "emmeans", "evaluate", "Exact", "fansi", "foreach", "furrr", "future", "gargle", "generics", "gert", "ggfun", "ggimage", "ggplot2", "gld", "globals", "glue", "googledrive", "googlesheets4", "gower", "graphlayouts", "gt", "gtools", "hardhat", "haven", "hms", "htmlwidgets", "httpuv", "httr", "igraph", "imager", "infer", "insight", "ipred", "iterators", "jsonlite", "keyring", "knitr", "later", "lava", "lhs", "lme4", "lmom", "lubridate", "magrittr", "maptools", "mathjaxr", "memoise", "metafor", "mime", "modeldata", "mvtnorm", "nloptr", "odbc", "openssl", "openxlsx", "parallelly", "parameters", "parsnip", "pdftools", "performance", "pillar", "pins", "pkgbuild", "pkgdown", "pkgload", "plotly", "plyr", "prismatic", "pROC", "processx", "proxy", "ps", "qdapRegex", "qpdf", "R.methodsS3", "R.oo", "R.utils", "ragg", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "reprex", "rgdal", "rgeos", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rsample", "RSQLite", "rvest", "s2", "sass", "scales", "sessioninfo", "sf", "shiny", "showtext", "sjlabelled", "sjmisc", "slider", "sodium", "sp", "stringi", "sysfonts", "systemfonts", "targets", "testthat", "tibble", "tidygraph", "tidymodels", "tidyr", "tidyselect", "tiff", "tinytex", "tune", "tzdb", "units", "usethis", "uuid", "V8", "vctrs", "viridis", "vroom", "waldo", "withr", "wk", "workflows", "workflowsets", "worldfootballR", "xfun", "xml2", "yaml", "yardstick", "zoo"))
install.packages(c("backports", "BayesFactor", "bayestestR", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "checkmate", "chron", "classInt", "cli", "clipr", "colorspace", "commonmark", "conflicted", "crayon", "credentials", "crosstalk", "data.table", "datawizard", "DBI", "dbplyr", "desc", "DescTools", "deSolve", "devtools", "dials", "diffobj", "downlit", "dplyr", "DT", "dtplyr", "e1071", "effectsize", "emmeans", "evaluate", "Exact", "fansi", "foreach", "furrr", "future", "gargle", "generics", "gert", "ggfun", "ggimage", "ggplot2", "gld", "globals", "glue", "googledrive", "googlesheets4", "gower", "graphlayouts", "gt", "gtools", "hardhat", "haven", "hms", "htmlwidgets", "httpuv", "httr", "igraph", "imager", "infer", "insight", "ipred", "iterators", "jsonlite", "keyring", "knitr", "later", "lava", "lhs", "lme4", "lmom", "lubridate", "magrittr", "maptools", "mathjaxr", "memoise", "metafor", "mime", "modeldata", "mvtnorm", "nloptr", "odbc", "openssl", "openxlsx", "parallelly", "parameters", "parsnip", "pdftools", "performance", "pillar", "pins", "pkgbuild", "pkgdown", "pkgload", "plotly", "plyr", "prismatic", "pROC", "processx", "proxy", "ps", "qdapRegex", "qpdf", "R.methodsS3", "R.oo", "R.utils", "ragg", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "reprex", "rgdal", "rgeos", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rsample", "RSQLite", "rvest", "s2", "sass", "scales", "sessioninfo", "sf", "shiny", "showtext", "sjlabelled", "sjmisc", "slider", "sodium", "sp", "stringi", "sysfonts", "systemfonts", "targets", "testthat", "tibble", "tidygraph", "tidymodels", "tidyr", "tidyselect", "tiff", "tinytex", "tune", "tzdb", "units", "usethis", "uuid", "V8", "vctrs", "viridis", "vroom", "waldo", "withr", "wk", "workflows", "workflowsets", "worldfootballR", "xfun", "xml2", "yaml", "yardstick", "zoo"))
install.packages(c("backports", "BayesFactor", "bayestestR", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "checkmate", "chron", "classInt", "cli", "clipr", "colorspace", "commonmark", "conflicted", "crayon", "credentials", "crosstalk", "data.table", "datawizard", "DBI", "dbplyr", "desc", "DescTools", "deSolve", "devtools", "dials", "diffobj", "downlit", "dplyr", "DT", "dtplyr", "e1071", "effectsize", "emmeans", "evaluate", "Exact", "fansi", "foreach", "furrr", "future", "gargle", "generics", "gert", "ggfun", "ggimage", "ggplot2", "gld", "globals", "glue", "googledrive", "googlesheets4", "gower", "graphlayouts", "gt", "gtools", "hardhat", "haven", "hms", "htmlwidgets", "httpuv", "httr", "igraph", "imager", "infer", "insight", "ipred", "iterators", "jsonlite", "keyring", "knitr", "later", "lava", "lhs", "lme4", "lmom", "lubridate", "magrittr", "maptools", "mathjaxr", "memoise", "metafor", "mime", "modeldata", "mvtnorm", "nloptr", "odbc", "openssl", "openxlsx", "parallelly", "parameters", "parsnip", "pdftools", "performance", "pillar", "pins", "pkgbuild", "pkgdown", "pkgload", "plotly", "plyr", "prismatic", "pROC", "processx", "proxy", "ps", "qdapRegex", "qpdf", "R.methodsS3", "R.oo", "R.utils", "ragg", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "reprex", "rgdal", "rgeos", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rsample", "RSQLite", "rvest", "s2", "sass", "scales", "sessioninfo", "sf", "shiny", "showtext", "sjlabelled", "sjmisc", "slider", "sodium", "sp", "stringi", "sysfonts", "systemfonts", "targets", "testthat", "tibble", "tidygraph", "tidymodels", "tidyr", "tidyselect", "tiff", "tinytex", "tune", "tzdb", "units", "usethis", "uuid", "V8", "vctrs", "viridis", "vroom", "waldo", "withr", "wk", "workflows", "workflowsets", "worldfootballR", "xfun", "xml2", "yaml", "yardstick", "zoo"))
install.packages(c("backports", "BayesFactor", "bayestestR", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "checkmate", "chron", "classInt", "cli", "clipr", "colorspace", "commonmark", "conflicted", "crayon", "credentials", "crosstalk", "data.table", "datawizard", "DBI", "dbplyr", "desc", "DescTools", "deSolve", "devtools", "dials", "diffobj", "downlit", "dplyr", "DT", "dtplyr", "e1071", "effectsize", "emmeans", "evaluate", "Exact", "fansi", "foreach", "furrr", "future", "gargle", "generics", "gert", "ggfun", "ggimage", "ggplot2", "gld", "globals", "glue", "googledrive", "googlesheets4", "gower", "graphlayouts", "gt", "gtools", "hardhat", "haven", "hms", "htmlwidgets", "httpuv", "httr", "igraph", "imager", "infer", "insight", "ipred", "iterators", "jsonlite", "keyring", "knitr", "later", "lava", "lhs", "lme4", "lmom", "lubridate", "magrittr", "maptools", "mathjaxr", "memoise", "metafor", "mime", "modeldata", "mvtnorm", "nloptr", "odbc", "openssl", "openxlsx", "parallelly", "parameters", "parsnip", "pdftools", "performance", "pillar", "pins", "pkgbuild", "pkgdown", "pkgload", "plotly", "plyr", "prismatic", "pROC", "processx", "proxy", "ps", "qdapRegex", "qpdf", "R.methodsS3", "R.oo", "R.utils", "ragg", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "reprex", "rgdal", "rgeos", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rsample", "RSQLite", "rvest", "s2", "sass", "scales", "sessioninfo", "sf", "shiny", "showtext", "sjlabelled", "sjmisc", "slider", "sodium", "sp", "stringi", "sysfonts", "systemfonts", "targets", "testthat", "tibble", "tidygraph", "tidymodels", "tidyr", "tidyselect", "tiff", "tinytex", "tune", "tzdb", "units", "usethis", "uuid", "V8", "vctrs", "viridis", "vroom", "waldo", "withr", "wk", "workflows", "workflowsets", "worldfootballR", "xfun", "xml2", "yaml", "yardstick", "zoo"))
install.packages(c("backports", "BayesFactor", "bayestestR", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "checkmate", "chron", "classInt", "cli", "clipr", "colorspace", "commonmark", "conflicted", "crayon", "credentials", "crosstalk", "data.table", "datawizard", "DBI", "dbplyr", "desc", "DescTools", "deSolve", "devtools", "dials", "diffobj", "downlit", "dplyr", "DT", "dtplyr", "e1071", "effectsize", "emmeans", "evaluate", "Exact", "fansi", "foreach", "furrr", "future", "gargle", "generics", "gert", "ggfun", "ggimage", "ggplot2", "gld", "globals", "glue", "googledrive", "googlesheets4", "gower", "graphlayouts", "gt", "gtools", "hardhat", "haven", "hms", "htmlwidgets", "httpuv", "httr", "igraph", "imager", "infer", "insight", "ipred", "iterators", "jsonlite", "keyring", "knitr", "later", "lava", "lhs", "lme4", "lmom", "lubridate", "magrittr", "maptools", "mathjaxr", "memoise", "metafor", "mime", "modeldata", "mvtnorm", "nloptr", "odbc", "openssl", "openxlsx", "parallelly", "parameters", "parsnip", "pdftools", "performance", "pillar", "pins", "pkgbuild", "pkgdown", "pkgload", "plotly", "plyr", "prismatic", "pROC", "processx", "proxy", "ps", "qdapRegex", "qpdf", "R.methodsS3", "R.oo", "R.utils", "ragg", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "reprex", "rgdal", "rgeos", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rsample", "RSQLite", "rvest", "s2", "sass", "scales", "sessioninfo", "sf", "shiny", "showtext", "sjlabelled", "sjmisc", "slider", "sodium", "sp", "stringi", "sysfonts", "systemfonts", "targets", "testthat", "tibble", "tidygraph", "tidymodels", "tidyr", "tidyselect", "tiff", "tinytex", "tune", "tzdb", "units", "usethis", "uuid", "V8", "vctrs", "viridis", "vroom", "waldo", "withr", "wk", "workflows", "workflowsets", "worldfootballR", "xfun", "xml2", "yaml", "yardstick", "zoo"))
install.packages(c("backports", "BayesFactor", "bayestestR", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "checkmate", "chron", "classInt", "cli", "clipr", "colorspace", "commonmark", "conflicted", "crayon", "credentials", "crosstalk", "data.table", "datawizard", "DBI", "dbplyr", "desc", "DescTools", "deSolve", "devtools", "dials", "diffobj", "downlit", "dplyr", "DT", "dtplyr", "e1071", "effectsize", "emmeans", "evaluate", "Exact", "fansi", "foreach", "furrr", "future", "gargle", "generics", "gert", "ggfun", "ggimage", "ggplot2", "gld", "globals", "glue", "googledrive", "googlesheets4", "gower", "graphlayouts", "gt", "gtools", "hardhat", "haven", "hms", "htmlwidgets", "httpuv", "httr", "igraph", "imager", "infer", "insight", "ipred", "iterators", "jsonlite", "keyring", "knitr", "later", "lava", "lhs", "lme4", "lmom", "lubridate", "magrittr", "maptools", "mathjaxr", "memoise", "metafor", "mime", "modeldata", "mvtnorm", "nloptr", "odbc", "openssl", "openxlsx", "parallelly", "parameters", "parsnip", "pdftools", "performance", "pillar", "pins", "pkgbuild", "pkgdown", "pkgload", "plotly", "plyr", "prismatic", "pROC", "processx", "proxy", "ps", "qdapRegex", "qpdf", "R.methodsS3", "R.oo", "R.utils", "ragg", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "reprex", "rgdal", "rgeos", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rsample", "RSQLite", "rvest", "s2", "sass", "scales", "sessioninfo", "sf", "shiny", "showtext", "sjlabelled", "sjmisc", "slider", "sodium", "sp", "stringi", "sysfonts", "systemfonts", "targets", "testthat", "tibble", "tidygraph", "tidymodels", "tidyr", "tidyselect", "tiff", "tinytex", "tune", "tzdb", "units", "usethis", "uuid", "V8", "vctrs", "viridis", "vroom", "waldo", "withr", "wk", "workflows", "workflowsets", "worldfootballR", "xfun", "xml2", "yaml", "yardstick", "zoo"))
install.packages(c("backports", "BayesFactor", "bayestestR", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "checkmate", "chron", "classInt", "cli", "clipr", "colorspace", "commonmark", "conflicted", "crayon", "credentials", "crosstalk", "data.table", "datawizard", "DBI", "dbplyr", "desc", "DescTools", "deSolve", "devtools", "dials", "diffobj", "downlit", "dplyr", "DT", "dtplyr", "e1071", "effectsize", "emmeans", "evaluate", "Exact", "fansi", "foreach", "furrr", "future", "gargle", "generics", "gert", "ggfun", "ggimage", "ggplot2", "gld", "globals", "glue", "googledrive", "googlesheets4", "gower", "graphlayouts", "gt", "gtools", "hardhat", "haven", "hms", "htmlwidgets", "httpuv", "httr", "igraph", "imager", "infer", "insight", "ipred", "iterators", "jsonlite", "keyring", "knitr", "later", "lava", "lhs", "lme4", "lmom", "lubridate", "magrittr", "maptools", "mathjaxr", "memoise", "metafor", "mime", "modeldata", "mvtnorm", "nloptr", "odbc", "openssl", "openxlsx", "parallelly", "parameters", "parsnip", "pdftools", "performance", "pillar", "pins", "pkgbuild", "pkgdown", "pkgload", "plotly", "plyr", "prismatic", "pROC", "processx", "proxy", "ps", "qdapRegex", "qpdf", "R.methodsS3", "R.oo", "R.utils", "ragg", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "reprex", "rgdal", "rgeos", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rsample", "RSQLite", "rvest", "s2", "sass", "scales", "sessioninfo", "sf", "shiny", "showtext", "sjlabelled", "sjmisc", "slider", "sodium", "sp", "stringi", "sysfonts", "systemfonts", "targets", "testthat", "tibble", "tidygraph", "tidymodels", "tidyr", "tidyselect", "tiff", "tinytex", "tune", "tzdb", "units", "usethis", "uuid", "V8", "vctrs", "viridis", "vroom", "waldo", "withr", "wk", "workflows", "workflowsets", "worldfootballR", "xfun", "xml2", "yaml", "yardstick", "zoo"))
install.packages(c("backports", "BayesFactor", "bayestestR", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "checkmate", "chron", "classInt", "cli", "clipr", "colorspace", "commonmark", "conflicted", "crayon", "credentials", "crosstalk", "data.table", "datawizard", "DBI", "dbplyr", "desc", "DescTools", "deSolve", "devtools", "dials", "diffobj", "downlit", "dplyr", "DT", "dtplyr", "e1071", "effectsize", "emmeans", "evaluate", "Exact", "fansi", "foreach", "furrr", "future", "gargle", "generics", "gert", "ggfun", "ggimage", "ggplot2", "gld", "globals", "glue", "googledrive", "googlesheets4", "gower", "graphlayouts", "gt", "gtools", "hardhat", "haven", "hms", "htmlwidgets", "httpuv", "httr", "igraph", "imager", "infer", "insight", "ipred", "iterators", "jsonlite", "keyring", "knitr", "later", "lava", "lhs", "lme4", "lmom", "lubridate", "magrittr", "maptools", "mathjaxr", "memoise", "metafor", "mime", "modeldata", "mvtnorm", "nloptr", "odbc", "openssl", "openxlsx", "parallelly", "parameters", "parsnip", "pdftools", "performance", "pillar", "pins", "pkgbuild", "pkgdown", "pkgload", "plotly", "plyr", "prismatic", "pROC", "processx", "proxy", "ps", "qdapRegex", "qpdf", "R.methodsS3", "R.oo", "R.utils", "ragg", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "reprex", "rgdal", "rgeos", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rsample", "RSQLite", "rvest", "s2", "sass", "scales", "sessioninfo", "sf", "shiny", "showtext", "sjlabelled", "sjmisc", "slider", "sodium", "sp", "stringi", "sysfonts", "systemfonts", "targets", "testthat", "tibble", "tidygraph", "tidymodels", "tidyr", "tidyselect", "tiff", "tinytex", "tune", "tzdb", "units", "usethis", "uuid", "V8", "vctrs", "viridis", "vroom", "waldo", "withr", "wk", "workflows", "workflowsets", "worldfootballR", "xfun", "xml2", "yaml", "yardstick", "zoo"))
install.packages(c("backports", "BayesFactor", "bayestestR", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "checkmate", "chron", "classInt", "cli", "clipr", "colorspace", "commonmark", "conflicted", "crayon", "credentials", "crosstalk", "data.table", "datawizard", "DBI", "dbplyr", "desc", "DescTools", "deSolve", "devtools", "dials", "diffobj", "downlit", "dplyr", "DT", "dtplyr", "e1071", "effectsize", "emmeans", "evaluate", "Exact", "fansi", "foreach", "furrr", "future", "gargle", "generics", "gert", "ggfun", "ggimage", "ggplot2", "gld", "globals", "glue", "googledrive", "googlesheets4", "gower", "graphlayouts", "gt", "gtools", "hardhat", "haven", "hms", "htmlwidgets", "httpuv", "httr", "igraph", "imager", "infer", "insight", "ipred", "iterators", "jsonlite", "keyring", "knitr", "later", "lava", "lhs", "lme4", "lmom", "lubridate", "magrittr", "maptools", "mathjaxr", "memoise", "metafor", "mime", "modeldata", "mvtnorm", "nloptr", "odbc", "openssl", "openxlsx", "parallelly", "parameters", "parsnip", "pdftools", "performance", "pillar", "pins", "pkgbuild", "pkgdown", "pkgload", "plotly", "plyr", "prismatic", "pROC", "processx", "proxy", "ps", "qdapRegex", "qpdf", "R.methodsS3", "R.oo", "R.utils", "ragg", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "reprex", "rgdal", "rgeos", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rsample", "RSQLite", "rvest", "s2", "sass", "scales", "sessioninfo", "sf", "shiny", "showtext", "sjlabelled", "sjmisc", "slider", "sodium", "sp", "stringi", "sysfonts", "systemfonts", "targets", "testthat", "tibble", "tidygraph", "tidymodels", "tidyr", "tidyselect", "tiff", "tinytex", "tune", "tzdb", "units", "usethis", "uuid", "V8", "vctrs", "viridis", "vroom", "waldo", "withr", "wk", "workflows", "workflowsets", "worldfootballR", "xfun", "xml2", "yaml", "yardstick", "zoo"))
install.packages(c("backports", "BayesFactor", "bayestestR", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "checkmate", "chron", "classInt", "cli", "clipr", "colorspace", "commonmark", "conflicted", "crayon", "credentials", "crosstalk", "data.table", "datawizard", "DBI", "dbplyr", "desc", "DescTools", "deSolve", "devtools", "dials", "diffobj", "downlit", "dplyr", "DT", "dtplyr", "e1071", "effectsize", "emmeans", "evaluate", "Exact", "fansi", "foreach", "furrr", "future", "gargle", "generics", "gert", "ggfun", "ggimage", "ggplot2", "gld", "globals", "glue", "googledrive", "googlesheets4", "gower", "graphlayouts", "gt", "gtools", "hardhat", "haven", "hms", "htmlwidgets", "httpuv", "httr", "igraph", "imager", "infer", "insight", "ipred", "iterators", "jsonlite", "keyring", "knitr", "later", "lava", "lhs", "lme4", "lmom", "lubridate", "magrittr", "maptools", "mathjaxr", "memoise", "metafor", "mime", "modeldata", "mvtnorm", "nloptr", "odbc", "openssl", "openxlsx", "parallelly", "parameters", "parsnip", "pdftools", "performance", "pillar", "pins", "pkgbuild", "pkgdown", "pkgload", "plotly", "plyr", "prismatic", "pROC", "processx", "proxy", "ps", "qdapRegex", "qpdf", "R.methodsS3", "R.oo", "R.utils", "ragg", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactable", "readr", "readxl", "recipes", "remotes", "reprex", "rgdal", "rgeos", "rlang", "rmarkdown", "roxygen2", "rprojroot", "rsample", "RSQLite", "rvest", "s2", "sass", "scales", "sessioninfo", "sf", "shiny", "showtext", "sjlabelled", "sjmisc", "slider", "sodium", "sp", "stringi", "sysfonts", "systemfonts", "targets", "testthat", "tibble", "tidygraph", "tidymodels", "tidyr", "tidyselect", "tiff", "tinytex", "tune", "tzdb", "units", "usethis", "uuid", "V8", "vctrs", "viridis", "vroom", "waldo", "withr", "wk", "workflows", "workflowsets", "worldfootballR", "xfun", "xml2", "yaml", "yardstick", "zoo"))
